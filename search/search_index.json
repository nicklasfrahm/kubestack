{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Kubestack","text":"<p>Kubestack is a infrastructure orchestrator built on top of Kubernetes. The goal is to provide APIs to build private clouds using Kubernetes as a control plane and API.</p>"},{"location":"index.html#overview","title":"Overview","text":"<ul> <li> <p>Management   As Kubestack is built on top of bare-metal infrastructure, it requires foundational management APIs to connect to existing infrastructure, such as network appliances.</p> </li> <li> <p>Networking   Kubestack provides low-level APIs to manage network infrastructure, such as <code>Interfaces</code>.</p> </li> </ul> <p>If you are consuming the APIs you may also find the auto-generated CRD documentation useful.</p>"},{"location":"index.html#architectural-principles","title":"Architectural principles","text":"<ul> <li>Agentless   Kubestack aims to be agentless, meaning that it does not require any agent to be installed on the managed infrastructure. This may mean an increased amount of management traffic but also avoids the need to install and maintain agents, possibly allowing for easier development of new appliance drivers.</li> </ul>"},{"location":"index.html#license","title":"License","text":"<p>Kubestack is and will always be licensed under the terms of the MIT license.</p>"},{"location":"management.html","title":"Overview","text":"<p>This section describes how to connect to existing appliances to manage them.</p>"},{"location":"management.html#protocols","title":"Protocols","text":"<p>To configure the remote management of an appliance, you need to create a <code>Connection</code>, which defines a management protocol and a reference to a <code>Secret</code> that contains the credentials to connect to the appliance. As the authentication methods for each protocol vary, so do the supported keys in the <code>Secret</code> based on the mangement protocol. Learn more about the configuration of a <code>Connection</code> for a supported management protocol and the structure of the corresponding <code>Secret</code> by following the links below.</p> <ul> <li><code>SSH</code>: Secure Shell protocol</li> </ul>"},{"location":"management.html#verification","title":"Verification","text":"<p>If a <code>Connection</code> is successfully created, the controller will probe for the operating system of the appliance. You may verify this by running the following command.</p> <pre><code>kubectl get conn\n</code></pre> <pre><code>NAME           PROTOCOL   OS-NAME   OS-VERSION\nalfa           SSH        Ubuntu    22.04\ndistswitch00   SSH        Nexus     9.3(10)I9\n</code></pre>"},{"location":"management.html#troubleshooting","title":"Troubleshooting","text":"<p>If you are having trouble connecting to your appliance, inspecting the event log may provide useful information.</p> <pre><code>kubectl get event \\\n--field-selector involvedObject.kind=Connection \\\n--field-selector involvedObject.name=alfa\n</code></pre> <pre><code>LAST SEEN   TYPE      REASON             OBJECT            MESSAGE\n50m         Warning   ConnectionFailed   connection/alfa   dial tcp: lookup alfa.nicklasfrahm.dev: no such host\n13m         Warning   ConnectionFailed   connection/alfa   Secret \"connection-alfa\" not found\n10m         Normal    OSProbed           connection/alfa   OS information probed successfully.\n</code></pre>"},{"location":"networking.html","title":"Networking","text":"<p>This section describes how to manage network devices to create networks using Kubestack.</p> <p>You may use kubestack to manage the following settings on your network devices:</p> <ul> <li>Network interfaces   This allows you to configure L2 interfaces, such as access and trunk VLAN ports, as well as L3 interfaces, such as routed VLAN ports or point-to-point links.</li> </ul>"},{"location":"management/ssh.html","title":"SSH","text":"<p>This section describes how to connect to appliances using SSH.</p>"},{"location":"management/ssh.html#prerequisites","title":"Prerequisites","text":"<p>Managing an appliance using SSH requires that the login shell of the user is <code>bash</code>.</p>"},{"location":"management/ssh.html#nx-os","title":"NX-OS","text":"<p>To enable the <code>bash</code> login shell on NX-OS, you need to run the following commands.</p> <pre><code># Enter configuration mode.\nconfigure terminal\n# Configure bash as the login shell for the user \"admin\".\nusername admin shelltype bash\n# Exit configuration mode.\nexit\n# Persist settings between reboots.\ncopy running-config startup-config\n</code></pre> <p>After reconnecting to the appliance, <code>bash</code> is now your default shell. You may enter the NX-OS VSH for configuration commands by running <code>vsh</code>.</p>"},{"location":"management/ssh.html#configuration","title":"Configuration","text":""},{"location":"management/ssh.html#secret","title":"Secret","text":"<p>Below you may find an example of a <code>Secret</code> for an SSH connection using all possible keys. The usage of an encrypted private key and a jump host is optional.</p> ssh-secret.yaml<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\nname: ssh-credentials\ntype: Opaque\nstringData:\n# Passphrase if the private key is encrypted.\npassphrase: dont-check-this-into-your-repo-please\n# Password for authentication.\n# This is only used if the private key is not provided.\npasswordInsecure: possible-but-not-recommended\n# Private key for authentication. This takes precedence over the password.\nkey: |\n-----BEGIN OPENSSH PRIVATE KEY-----\nREDACTED\n-----END OPENSSH PRIVATE KEY-----\n# Passphrase for an encrypted private key while using a jump host.\nproxyPassphrase: dont-check-this-into-your-repo-please\n# Password for authentication while using a jump host.\n# This is only used if the private key is not provided.\nproxyPasswordInsecure: possible-but-not-recommended\n# Private key for authentication while using a jump host.\n# This takes precedence over the password.\nproxyKey: |\n-----BEGIN OPENSSH PRIVATE KEY-----\nREDACTED\n-----END OPENSSH PRIVATE KEY-----\n</code></pre>"},{"location":"management/ssh.html#connection","title":"Connection","text":"<p>Below, you may find a simple example where the controller will connect directly to the appliance.</p> distswitch00.yaml<pre><code>apiVersion: kubestack.nicklasfrahm.dev/v1alpha1\nkind: Connection\nmetadata:\n# (optional) These labels are not required for Kubestack to work.\nlabels:\napp.kubernetes.io/name: connection\napp.kubernetes.io/instance: distswitch00\napp.kubernetes.io/part-of: kubestack\napp.kubernetes.io/managed-by: kustomize\napp.kubernetes.io/created-by: kubestack\nname: distswitch00\nspec:\n# (required) The protocol to use for the connection.\nprotocol: SSH\n# (required) The network address of the appliance.\nhost: 10.0.10.101\n# Configure options specific to the SSH protocol.\nssh:\n# (optional) Configure the host key fingerprint to prevent PitM attacks.\nfingerprint: SHA256:W7ISJgSm3sDgH2Iv6FFAhhKz+Ps0VtLgSMqrlLsq1ro\n# (optional) Specify a user. Defaults to root.\nuser: admin\n# (required) Configure the credentials.\nsecretRef:\n# (required) The name of the secret that contains the credentials.\nname: connection-distswitch00\n</code></pre> <p>In more complex setup, you many need to use a jump host to connect to your appliance. This can be done as well.</p> alfa.yaml<pre><code>apiVersion: kubestack.nicklasfrahm.dev/v1alpha1\nkind: Connection\nmetadata:\n# (optional) These labels are not required for Kubestack to work.\nlabels:\napp.kubernetes.io/name: connection\napp.kubernetes.io/instance: alfa\napp.kubernetes.io/part-of: kubestack\napp.kubernetes.io/managed-by: kustomize\napp.kubernetes.io/created-by: kubestack\nname: alfa\nspec:\n# (required) The protocol to use for the connection.\nprotocol: SSH\n# (required) The network address of the appliance.\nhost: 172.16.0.254\n# (optional) Specify a port. Defaults to 22 for SSH.\n# port: 22\n# Configure options specific to the SSH protocol.\nssh:\n# (optional) Configure the host key fingerprint to prevent PitM attacks.\nfingerprint: SHA256:GxNvyufD71QuCnH04eNp3LzCGuTV+ookFzVGUtlWvCI\n# (optional) Specify a user. Defaults to root.\nuser: nicklasfrahm\n# (optional) Specify a proxy host. Defaults to none.\n# Setting this will enable the usage of a jump host.\nproxyHost: alfa.nicklasfrahm.xyz\n# (optional) Specify a port. Defaults to 22.\n# proxyPort: 22\nproxyFingerprint: SHA256:GxNvyufD71QuCnH04eNp3LzCGuTV+ookFzVGUtlWvCI\n# (optional) Specify a user. Defaults to root.\nproxyUser: nicklasfrahm\n# (required) Configure the credentials.\nsecretRef:\n# The name of the secret that contains the credentials.\nname: connection-alfa\n# (optional) Specify the namespace. Defaults\n# to the namespace of the Connection resource.\n# namespace: default\n</code></pre>"},{"location":"networking/interfaces.html","title":"Interfaces","text":"<p>The <code>Interface</code> custom resource allows you to manage network interfaces on your network devices. All interfaces must reference a <code>Connection</code>. For more information about how to configure a <code>Connection</code>, please refer to the management section.</p> <p>You may get a list of network interfaces by running the following command.</p> <pre><code>kubectl get if\n</code></pre> <pre><code>NAME                  CONNECTION-NAME   SELECTOR-NAME   VLAN-MODE\ndistswitch00-eth1-1   distswitch00      eth1/1          Access\ndistswitch00-eth1-3   distswitch00      eth1/3          Trunk\n</code></pre>"},{"location":"networking/interfaces.html#vlan","title":"VLAN","text":"<p>Virtual local area networks (VLANs) are used to segment a network into multiple broadcast domains. They allow you to build multiple networks using a single physical network. For more information about VLANs, please refer to the VLAN Wikipedia article.</p>"},{"location":"networking/interfaces.html#access-port","title":"Access port","text":"<p>An access port is a link that is configured to only allow traffic for a single VLAN. This is useful to connect an end-user device to a specific VLAN.</p> distswitch00-eth1-1.yaml<pre><code>apiVersion: kubestack.nicklasfrahm.dev/v1alpha1\nkind: Interface\nmetadata:\n# (optional) These labels are not required for Kubestack to work.\nlabels:\napp.kubernetes.io/name: interface\napp.kubernetes.io/instance: distswitch00-eth1-1\napp.kubernetes.io/part-of: kubestack\napp.kubernetes.io/managed-by: kustomize\napp.kubernetes.io/created-by: kubestack\nname: distswitch00-eth1-1\nspec:\n# (required) Configure the connection.\nconnectionRef:\n# (required) The name of the Connection resource.\nname: distswitch00\n# (optional) Specify the namespace. Defaults\n# to the namespace of the Connection resource.\n# namespace: default\n# (required) Specify an interface selector.\nselector:\n# (optional) The name of the interface.\nname: eth1/1\n# (optional) The MAC address of the interface.\n# mac: 00:00:00:00:00:00\n# (optional) Override the interface name.\n# This may not be supported by all appliances.\n# name: eth1x01\n# (required) Specify the interface type.\ntype: EthernetCSMACD\n# (optional) Specify the interface MTU.\n# mtu: 1500\n# (optional) Specify the interface description.\ndescription: Internet towards ISP.\n# (optional) Enable or disable the interface.\nenabled: true\n# (optional) Specify additional ethernet configuration.\nethernet:\n# (optional) Override the system-assigned MAC address.\n# macAddress: 00:00:00:00:00:00\n# (optional) Enable or disable auto-negotiation.\nautoNegotiate: true\n# (optional) Force the duplex mode.\n# duplexMode: Full\n# (optional) Force the speed.\n# portSpeed: 1Gbps\n# (optional) Configure switched VLANs.\nswitchedVLAN:\n# (required) Configure the VLAN mode.\ninterfaceMode: Access\n# (required) Configure the access VLAN ID.\naccessVLAN: 5\n</code></pre>"},{"location":"networking/interfaces.html#trunk-port","title":"Trunk port","text":"<p>A trunk port is a link that is configured to allow traffic for multiple VLANs. This is useful to connect two VLAN-aware switches together.</p> distswitch00-eth1-3.yaml<pre><code>apiVersion: kubestack.nicklasfrahm.dev/v1alpha1\nkind: Interface\nmetadata:\n# (optional) These labels are not required for Kubestack to work.\nlabels:\napp.kubernetes.io/name: interface\napp.kubernetes.io/instance: distswitch00-eth1-3\napp.kubernetes.io/part-of: kubestack\napp.kubernetes.io/managed-by: kustomize\napp.kubernetes.io/created-by: kubestack\nname: distswitch00-eth1-3\nspec:\n# (required) Configure the connection.\nconnectionRef:\n# (required) The name of the Connection resource.\nname: distswitch00\n# (optional) Specify the namespace. Defaults\n# to the namespace of the Connection resource.\n# namespace: default\n# (required) Specify an interface selector.\nselector:\n# (optional) The name of the interface.\nname: eth1/3\n# (optional) The MAC address of the interface.\n# mac: 00:00:00:00:00:00\n# (optional) Override the interface name.\n# This may not be supported by all appliances.\n# name: eth1x03\n# (required) Specify the interface type.\ntype: EthernetCSMACD\n# (optional) Specify the interface MTU.\n# mtu: 1500\n# (optional) Specify the interface description.\ndescription: Internet towards ISP.\n# (optional) Enable or disable the interface.\nenabled: true\n# (optional) Specify additional ethernet configuration.\nethernet:\n# (optional) Override the system-assigned MAC address.\n# macAddress: 00:00:00:00:00:00\n# (optional) Enable or disable auto-negotiation.\nautoNegotiate: true\n# (optional) Force the duplex mode.\n# duplexMode: Full\n# (optional) Force the speed.\n# portSpeed: 1Gbps\n# (optional) Configure switched VLANs.\nswitchedVLAN:\n# (required) Configure the VLAN mode.\ninterfaceMode: Trunk\n# (optional) Configure the VLAN ID of untagged\n# frames arriving at this port. Defaults to 1.\nnativeVLAN: 9\n# (required) Configure the trunk VLAN IDs.\ntrunkVLANs:\n- 5\n- 9\n- 10\n</code></pre>"}]}